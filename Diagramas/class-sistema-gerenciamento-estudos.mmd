classDiagram
    %% ====== ARQUITETURA MVC SIMPLIFICADA ======
    %% Model (Dados), View (Interface), Controller (Lógica)

    %% ====== MODELS (DADOS/ENTIDADES) ======

    class Usuario {
        -Long id
        -String nome
        -String email
        -String senha
        -DateTime dataCadastro
        -Boolean ativo
        +salvar() Boolean
        +buscarPorEmail(email) Usuario
        +validarLogin(email, senha) Boolean
        +criptografarSenha(senha) String
    }

    class ConteudoEstudo {
        -Long id
        -String titulo
        -String descricao
        -String status
        -Long usuarioId
        -Long categoriaId
        -DateTime dataCriacao
        -DateTime dataAtualizacao
        +salvar() Boolean
        +buscarPorUsuario(usuarioId) List
        +alterarStatus(novoStatus) Boolean
        +validarDados() Boolean
    }

    class SessaoEstudo {
        -Long id
        -Long conteudoId
        -Long usuarioId
        -DateTime dataInicio
        -DateTime dataFim
        -Integer duracaoMinutos
        -String observacoes
        +salvar() Boolean
        +calcularDuracao() Integer
        +buscarPorConteudo(conteudoId) List
        +buscarPorPeriodo(usuarioId, periodo) List
    }

    class Meta {
        -Long id
        -String titulo
        -Date dataAlvo
        -String status
        -Long usuarioId
        -DateTime dataCriacao
        -Float percentualProgresso
        +salvar() Boolean
        +calcularProgresso() Float
        +buscarPorUsuario(usuarioId) List
        +adicionarConteudo(conteudoId) Boolean
    }

    class Lembrete {
        -Long id
        -Long conteudoId
        -Long usuarioId
        -DateTime dataHora
        -String mensagem
        -String status
        +salvar() Boolean
        +agendar() Boolean
        +marcarComoEnviado() Boolean
        +buscarPorUsuario(usuarioId) List
    }

    class Categoria {
        -Long id
        -String nome
        -String descricao
        -String cor
        -Long usuarioId
        +salvar() Boolean
        +buscarPorUsuario(usuarioId) List
        +excluir() Boolean
    }

    class MetaConteudo {
        -Long id
        -Long metaId
        -Long conteudoId
        -Boolean concluido
        -DateTime dataConclusao
        +salvar() Boolean
        +marcarConcluido() Boolean
        +buscarPorMeta(metaId) List
    }

    class Estatisticas {
        -Map dadosPorDia
        -Integer totalHoras
        -Integer totalSessoes
        -Float mediaHorasPorDia
        +gerarRelatorio(usuarioId, periodo) Estatisticas
        +calcularTotais() void
    }

    %% ====== CONTROLLERS (LÓGICA DE CONTROLE) ======

    class UsuarioController {
        +exibirFormularioCadastro() String
        +cadastrarUsuario(dados) String
        +exibirFormularioLogin() String
        +fazerLogin(email, senha) String
        +logout() String
        +exibirPerfil(usuarioId) String
        +atualizarPerfil(dados) String
    }

    class ConteudoController {
        +listarConteudos(usuarioId) String
        +exibirFormularioNovoConteudo() String
        +criarConteudo(dados, usuarioId) String
        +editarConteudo(id, dados) String
        +alterarStatus(id, novoStatus) String
        +excluirConteudo(id) String
        +visualizarConteudo(id) String
    }

    class SessaoController {
        +iniciarSessao(conteudoId) String
        +finalizarSessao(dados) String
        +listarSessoes(usuarioId) String
        +visualizarSessao(id) String
        +editarSessao(id, dados) String
        +excluirSessao(id) String
    }

    class MetaController {
        +listarMetas(usuarioId) String
        +exibirFormularioNovaMeta() String
        +criarMeta(dados, usuarioId) String
        +editarMeta(id, dados) String
        +excluirMeta(id) String
        +atualizarProgresso(id) String
        +visualizarMeta(id) String
    }

    class LembreteController {
        +listarLembretes(usuarioId) String
        +exibirFormularioNovoLembrete() String
        +criarLembrete(dados, usuarioId) String
        +editarLembrete(id, dados) String
        +excluirLembrete(id) String
        +marcarComoEnviado(id) String
    }

    class CategoriaController {
        +listarCategorias(usuarioId) String
        +exibirFormularioNovaCategoria() String
        +criarCategoria(dados, usuarioId) String
        +editarCategoria(id, dados) String
        +excluirCategoria(id) String
    }

    class DashboardController {
        +exibirDashboard(usuarioId) String
        +gerarEstatisticas(usuarioId, periodo) String
        +exibirRelatorios(usuarioId) String
        +exportarDados(usuarioId, formato) String
    }

    %% ====== VIEWS (INTERFACES) ======

    class UsuarioView {
        +formCadastro() HTML
        +formLogin() HTML
        +perfilUsuario(usuario) HTML
        +mensagemSucesso(mensagem) HTML
        +mensagemErro(erro) HTML
    }

    class ConteudoView {
        +listaConteudos(conteudos) HTML
        +formNovoConteudo(categorias) HTML
        +formEditarConteudo(conteudo) HTML
        +detalhesConteudo(conteudo, sessoes) HTML
        +seletorStatus() HTML
    }

    class SessaoView {
        +cronometro(conteudo) HTML
        +formSessao() HTML
        +listaSessoes(sessoes) HTML
        +detalhesSessao(sessao) HTML
        +estatisticasSessoes(dados) HTML
    }

    class MetaView {
        +listaMetas(metas) HTML
        +formNovaMeta(conteudos) HTML
        +formEditarMeta(meta) HTML
        +progressoMeta(meta, progresso) HTML
        +detalhesMeta(meta) HTML
    }

    class LembreteView {
        +listaLembretes(lembretes) HTML
        +formNovoLembrete() HTML
        +formEditarLembrete(lembrete) HTML
        +notificacaoLembrete(lembrete) HTML
    }

    class CategoriaView {
        +listaCategorias(categorias) HTML
        +formNovaCategoria() HTML
        +formEditarCategoria(categoria) HTML
        +seletorCategorias(categorias) HTML
    }

    class DashboardView {
        +dashboardPrincipal(estatisticas) HTML
        +graficoHorasPorDia(dados) HTML
        +graficoProgressoMetas(metas) HTML
        +resumoEstatisticas(totais) HTML
        +relatorioCompleto(dados) HTML
    }

    %% ====== RELACIONAMENTOS ENTRE MODELS ======

    Usuario "1" -- "0..*" ConteudoEstudo : "cria"
    Usuario "1" -- "0..*" SessaoEstudo : "registra"
    Usuario "1" -- "0..*" Meta : "define"
    Usuario "1" -- "0..*" Categoria : "possui"
    Usuario "1" -- "0..*" Lembrete : "agenda"

    Categoria "1" -- "0..*" ConteudoEstudo : "agrupa"

    ConteudoEstudo "1" -- "0..*" SessaoEstudo : "tem"
    ConteudoEstudo "1" -- "0..*" Lembrete : "possui"

    Meta "0..*" -- "0..*" MetaConteudo : "associa"
    ConteudoEstudo "0..*" -- "0..*" MetaConteudo : "vincula"

    %% ====== DEPENDÊNCIAS MVC ======

    %% Controllers usam Models
    UsuarioController --> Usuario : "manipula"
    ConteudoController --> ConteudoEstudo : "manipula"
    ConteudoController --> Categoria : "usa"
    SessaoController --> SessaoEstudo : "manipula"
    SessaoController --> ConteudoEstudo : "consulta"
    MetaController --> Meta : "manipula"
    MetaController --> MetaConteudo : "gerencia"
    LembreteController --> Lembrete : "manipula"
    CategoriaController --> Categoria : "manipula"
    DashboardController --> Estatisticas : "gera"
    DashboardController --> SessaoEstudo : "consulta"

    %% Controllers usam Views
    UsuarioController --> UsuarioView : "renderiza"
    ConteudoController --> ConteudoView : "renderiza"
    SessaoController --> SessaoView : "renderiza"
    MetaController --> MetaView : "renderiza"
    LembreteController --> LembreteView : "renderiza"
    CategoriaController --> CategoriaView : "renderiza"
    DashboardController --> DashboardView : "renderiza"